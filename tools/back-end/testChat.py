# coding=utf8
import requests
from gradio_client import Client

def ty_request():
	API_URL = 'https://model-app-func-modelsc-bb-eaab-fulwbopjkp.cn-hangzhou.fcapp.run/invoke'
	def post_request(url, json):
		with requests.Session() as session:
			response = session.post(url,json=json,)
			return response
	payload = {"hello"}
	response = post_request(API_URL, json=payload)
	print("response:", response.json())
	return response

def ty_gradio(mess):
	client = Client(
		"http://model-ui-func.modelscope-ddaed09f-d8a8-4275-b4b8-eaa0b4484292.1569834201311714.cn-hangzhou.fc.devsapp.net/")
	result = client.predict(
		mess,  # str in 'Message' Textbox component
		api_name="/chat"
	)
	print(result)
	return result

def zw_request(mess):
	API_URL = 'http://192.168.1.169:8005/nlpsearch'
	def post_request(url, json):
		with requests.Session() as session:
			response = session.post(url,json=json,)
			return response

	payload = {
		"scene": "legal_advice",
		"text": mess
	}
	response = post_request(API_URL, json=payload)
	print("response:", response.json())
	return response

if __name__ == "__main__":
# 	ty_gradio('''给定的句子为："《如懿传》是一部电视剧，导演是汪俊，由周迅、霍建华、张钧甯、董洁、辛芷蕾、童瑶、李纯、邬君梅等主演"
# 给定三元组格式：谓语：[主语，宾语]
# 给定三元组列表：{'所属专辑': ['歌曲', '音乐专辑'], '成立日期': ['机构', 'Date'], '海拔': ['地点', 'Number'], '官方语言': ['国家', '语言'], '占地面积': ['机构', 'Number'], '父亲': ['人物', '人物'], '歌手': ['歌曲', '人物'], '制片人': ['影视作品', '人物'], '导演': ['影视作品', '人物'], '首都': ['国家', '城市'], '主演': ['影视作品', '人物'], '董事长': ['企业', '人物'], '祖籍': ['人物', '地点'], '妻子': ['人物', '人物'], '母亲': ['人物', '人物'], '气候': ['行政区', '气候'], '面积': ['行政区', 'Number'], '主角': ['文学作品', '人物'], '邮政编码': ['行政区', 'Text'], '简称': ['机构', 'Text'], '出品公司': ['影视作品', '企业'], '注册资本': ['企业', 'Number'], '编剧': ['影视作品', '人物'], '创始人': ['企业', '人物'], '毕业院校': ['人物', '学校'], '国籍': ['人物', '国家'], '专业代码': ['学科专业', 'Text'], '朝代': ['历史人物', 'Text'], '作者': ['图书作品', '人物'], '作词': ['歌曲', '人物'], '所在城市': ['景点', '城市'], '嘉宾': ['电视综艺', '人物'], '总部地点': ['企业', '地点'], '人口数量': ['行政区', 'Number'], '代言人': ['企业/品牌', '人物'], '改编自': ['影视作品', '作品'], '校长': ['学校', '人物'], '丈夫': ['人物', '人物'], '主持人': ['电视综艺', '人物'], '主题曲': ['影视作品', '歌曲'], '修业年限': ['学科专业', 'Number'], '作曲': ['歌曲', '人物'], '号': ['历史人物', 'Text'], '上映时间': ['影视作品', 'Date'], '票房': ['影视作品', 'Number'], '饰演': ['娱乐人物', '人物'], '配音': ['娱乐人物', '人物'], '获奖': ['娱乐人物', '奖项']}
# 请根据给定的句子找出其中与指定三元组相匹配的信息，如果不存在则不用打印
# 若存在请将匹配信息按照元组形式打印，例如(谓语1:[主语，宾语],谓语2:[主语，宾语])''')
	# response = zw_request("强奸犯的量刑原则")
	# rjson = response.json()
	# print(rjson["data"]["answer"])

#     content = '''给定的句子为："《如懿传》是一部电视剧，导演是汪俊，由周迅、霍建华、张钧甯、董洁、辛芷蕾、童瑶、李纯、邬君梅等主演"
# 给定三元组RDF格式：谓语：[主语，宾语],给定三元组RDF列表：{'所属专辑': ['歌曲', '音乐专辑'], '成立日期': ['机构', 'Date'], '海拔': ['地点', 'Number'], '官方语言': ['国家', '语言'], '占地面积': ['机构', 'Number'], '父亲': ['人物', '人物'], '歌手': ['歌曲', '人物'], '制片人': ['影视作品', '人物'], '导演': ['影视作品', '人物'], '首都': ['国家', '城市'], '主演': ['影视作品', '人物'], '董事长': ['企业', '人物'], '祖籍': ['人物', '地点'], '妻子': ['人物', '人物'], '母亲': ['人物', '人物'], '气候': ['行政区', '气候'], '面积': ['行政区', 'Number'], '主角': ['文学作品', '人物'], '邮政编码': ['行政区', 'Text'], '简称': ['机构', 'Text'], '出品公司': ['影视作品', '企业'], '注册资本': ['企业', 'Number'], '编剧': ['影视作品', '人物'], '创始人': ['企业', '人物'], '毕业院校': ['人物', '学校'], '国籍': ['人物', '国家'], '专业代码': ['学科专业', 'Text'], '朝代': ['历史人物', 'Text'], '作者': ['图书作品', '人物'], '作词': ['歌曲', '人物'], '所在城市': ['景点', '城市'], '嘉宾': ['电视综艺', '人物'], '总部地点': ['企业', '地点'], '人口数量': ['行政区', 'Number'], '代言人': ['企业/品牌', '人物'], '改编自': ['影视作品', '作品'], '校长': ['学校', '人物'], '丈夫': ['人物', '人物'], '主持人': ['电视综艺', '人物'], '主题曲': ['影视作品', '歌曲'], '修业年限': ['学科专业', 'Number'], '作曲': ['歌曲', '人物'], '号': ['历史人物', 'Text'], '上映时间': ['影视作品', 'Date'], '票房': ['影视作品', 'Number'], '饰演': ['娱乐人物', '人物'], '配音': ['娱乐人物', '人物'], '获奖': ['娱乐人物', '奖项']}
# 请根据给定的句子找出其中与指定三元组相匹配的信息，如果不存在则不用打印
# 若存在请将匹配信息按照元组形式打印，例如(谓语1:[主语，宾语],谓语2:[主语，宾语])'''

#     content = '''给定的句子为："《如懿传》是一部电视剧，导演是汪俊，由周迅、霍建华、张钧甯、董洁、辛芷蕾、童瑶、李纯、邬君梅等主演"
# 给定的关系列表：{'所属专辑': ['歌曲', '音乐专辑'], '成立日期': ['机构', 'Date'], '海拔': ['地点', 'Number'], '官方语言': ['国家', '语言'], '占地面积': ['机构', 'Number'], '父亲': ['人物', '人物'], '歌手': ['歌曲', '人物'], '制片人': ['影视作品', '人物'], '导演': ['影视作品', '人物'], '首都': ['国家', '城市'], '主演': ['影视作品', '人物'], '董事长': ['企业', '人物'], '祖籍': ['人物', '地点'], '妻子': ['人物', '人物'], '母亲': ['人物', '人物'], '气候': ['行政区', '气候'], '面积': ['行政区', 'Number'], '主角': ['文学作品', '人物'], '邮政编码': ['行政区', 'Text'], '简称': ['机构', 'Text'], '出品公司': ['影视作品', '企业'], '注册资本': ['企业', 'Number'], '编剧': ['影视作品', '人物'], '创始人': ['企业', '人物'], '毕业院校': ['人物', '学校'], '国籍': ['人物', '国家'], '专业代码': ['学科专业', 'Text'], '朝代': ['历史人物', 'Text'], '作者': ['图书作品', '人物'], '作词': ['歌曲', '人物'], '所在城市': ['景点', '城市'], '嘉宾': ['电视综艺', '人物'], '总部地点': ['企业', '地点'], '人口数量': ['行政区', 'Number'], '代言人': ['企业/品牌', '人物'], '改编自': ['影视作品', '作品'], '校长': ['学校', '人物'], '丈夫': ['人物', '人物'], '主持人': ['电视综艺', '人物'], '主题曲': ['影视作品', '歌曲'], '修业年限': ['学科专业', 'Number'], '作曲': ['歌曲', '人物'], '号': ['历史人物', 'Text'], '上映时间': ['影视作品', 'Date'], '票房': ['影视作品', 'Number'], '饰演': ['娱乐人物', '人物'], '配音': ['娱乐人物', '人物'], '获奖': ['娱乐人物', '奖项']}
# 请根据给定的句子找出其中与给定关系相匹配的关系与实体信息，请将匹配的信息按照元组形式打印，其中实体信息请替换成给定句子中的实体，并且用英文‘[]’包住，例如(关系1:[实体1，实体2],关系2:[实体3，实体4])，其余无关信息不用打印'''

    content = '''给定的句子为："杭州市市场监督管理局认领了检查事项对虚报注册资本的检查，该部门执法成员有黄其证，该人员在2023年7月1日对杭州西彩门食品店进行了执法检查。该食品店的法定代表人是朱三，成立于2020年1月7日，该食品店的地址在杭州市拱墅区密度桥路232号，注册资本人民币100万元。本次检查涉及的检查事项是对虚报注册资本的检查。《中华人民共和国公司法》拥有第一百八十条法律条款，该条款生成了检查事项对虚报注册资本的检查；"
给定关系列表：{'成立日期': ['企业名称', '具体日期'], '注册资本': ['企业名称', '金额'], '法定代表人': ['企业名称', '人名'], '法人股东': ['企业名称', '企业名称'], '自然人股东': ['企业名称', '人名'], '地址': ['企业名称', '具体地址'], '分公司': ['企业名称', '企业名称'], '子公司': ['企业名称', '企业名称'], '监管部门': ['企业名称', '部门名称'], '执法检查': ['人名', '企业名称'], '认领': ['部门名称', '事项名称'], '执法成员': ['部门名称', '人名'], '拥有': ['法律法规', '条款名称'], '生成': ['条款名称', '事项名称'], '检查日期': ['人名', '具体日期']}
在给定的句子中，可能包含了给定关系列表中的哪些关系，请按照元组形式回复，如 (成立日期:[企业名称, 具体日期], 法定代表人:[企业名称, 人名])。
如果不存在则回答：无'''
    print(content)
    ty_gradio(content)

